# Generated by Django 4.1.5 on 2023-01-28 09:12

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0023_remove_author_born_in_past_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='author',
            name='born_in_past',
        ),
        migrations.RemoveConstraint(
            model_name='author',
            name='died_in_past',
        ),
        migrations.AlterField(
            model_name='author',
            name='first',
            field=models.CharField(max_length=64),
        ),
        migrations.AlterField(
            model_name='author',
            name='last',
            field=models.CharField(max_length=64),
        ),
        migrations.AlterField(
            model_name='book',
            name='title',
            field=models.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name='bookcopy',
            name='client',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='name',
            field=models.CharField(max_length=64),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.CheckConstraint(check=models.Q(('birth__gt', datetime.datetime(2023, 1, 28, 9, 12, 13, 189277, tzinfo=datetime.timezone.utc)), _negated=True), name='born_in_past', violation_error_message="Author can't be born in future"),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.CheckConstraint(check=models.Q(('death__gt', datetime.datetime(2023, 1, 28, 9, 12, 13, 189302, tzinfo=datetime.timezone.utc)), _negated=True), name='died_in_past', violation_error_message="You can't set author's death in future"),
        ),
        migrations.AddConstraint(
            model_name='bookcopy',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('client__isnull', False), ('duedate__isnull', False), ('status', 'o')), models.Q(models.Q(('status', 'o'), _negated=True), ('client__isnull', True), ('duedate__isnull', True)), _connector='OR'), name='no_partial_loan_info', violation_error_message='Partial loan info (only status, client or duedate) is not accepted. Either set all loan-related fields or none'),
        ),
        migrations.DeleteModel(
            name='Client',
        ),
    ]
